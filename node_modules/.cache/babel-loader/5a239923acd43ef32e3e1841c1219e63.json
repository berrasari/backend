{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar IS_DISABLED = function () {\n  if (window && window.strapi && window.strapi.isEE) {\n    return require('../../../../../../../../../../ee/admin/pages/SettingsPage/pages/Roles/EditPage/components/ConditionsModal/ActionRow/utils/constants')[\"default\"];\n  }\n\n  return require('./utils/constants')[\"default\"];\n}();\n\nimport { Box } from '@strapi/design-system/Box';\nimport { Flex } from '@strapi/design-system/Flex';\nimport { Typography } from '@strapi/design-system/Typography';\nimport { MultiSelectNested } from '@strapi/design-system/Select';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { rowHeight } from '../../Permissions/utils/constants';\nvar FlexWrapper = /*#__PURE__*/styled(Flex).withConfig({\n  displayName: \"ActionRow__FlexWrapper\",\n  componentId: \"sc-1bqpgdl-0\"\n})([\"height:\", \";\"], rowHeight);\n\nvar ActionRow = function ActionRow(_ref) {\n  var arrayOfOptionsGroupedByCategory = _ref.arrayOfOptionsGroupedByCategory,\n      isFormDisabled = _ref.isFormDisabled,\n      isGrey = _ref.isGrey,\n      label = _ref.label,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      value = _ref.value;\n\n  var _useIntl = useIntl(),\n      formatMessage = _useIntl.formatMessage;\n\n  var options = arrayOfOptionsGroupedByCategory.reduce(function (arr, curr) {\n    var _curr = _slicedToArray(curr, 2),\n        label = _curr[0],\n        children = _curr[1];\n\n    var obj = {\n      label: upperFirst(label),\n      children: children.map(function (child) {\n        return {\n          label: child.displayName,\n          value: child.id\n        };\n      })\n    };\n    return [].concat(_toConsumableArray(arr), [obj]);\n  }, []); // Output: ['value1', 'value2']\n\n  var values = Object.values(value).map(function (x) {\n    return Object.entries(x).filter(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          value = _ref3[1];\n\n      return value;\n    }).map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 1),\n          key = _ref5[0];\n\n      return key;\n    });\n  }).flat(); // ! Only expects arrayOfOpt to be [['default', obj]] - might break in future changes\n\n  var handleChange = function handleChange(val) {\n    var _arrayOfOptionsGroupe = _slicedToArray(arrayOfOptionsGroupedByCategory, 1),\n        _arrayOfOptionsGroupe2 = _slicedToArray(_arrayOfOptionsGroupe[0], 2),\n        values = _arrayOfOptionsGroupe2[1];\n\n    var formattedValues = values.reduce(function (acc, curr) {\n      return _objectSpread(_defineProperty({}, curr.id, val.includes(curr.id)), acc);\n    }, {});\n    onChange(name, formattedValues);\n  };\n\n  return /*#__PURE__*/React.createElement(FlexWrapper, {\n    as: \"li\",\n    background: isGrey ? 'neutral100' : 'neutral0'\n  }, /*#__PURE__*/React.createElement(Flex, {\n    paddingLeft: 6,\n    style: {\n      width: 180\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.permissions.conditions.can',\n    defaultMessage: 'Can'\n  }), \"\\xA0\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"sigma\",\n    title: label,\n    textColor: \"primary600\",\n    ellipsis: true\n  }, formatMessage({\n    id: \"Settings.roles.form.permissions.\".concat(label.toLowerCase()),\n    defaultMessage: label\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, \"\\xA0\", formatMessage({\n    id: 'Settings.permissions.conditions.when',\n    defaultMessage: 'When'\n  }))), /*#__PURE__*/React.createElement(Box, {\n    style: {\n      maxWidth: 430,\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(MultiSelectNested, {\n    id: name,\n    customizeContent: function customizeContent(values) {\n      return \"\".concat(values.length, \" currently selected\");\n    },\n    onChange: handleChange,\n    value: values,\n    options: options,\n    disabled: isFormDisabled || IS_DISABLED\n  })));\n};\n\nActionRow.propTypes = {\n  arrayOfOptionsGroupedByCategory: PropTypes.array.isRequired,\n  isFormDisabled: PropTypes.bool.isRequired,\n  isGrey: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default ActionRow;","map":null,"metadata":{},"sourceType":"module"}